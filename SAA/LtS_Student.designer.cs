#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SAA_Student")]
	public partial class LtS_StudentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertdim_datetime(dim_datetime instance);
    partial void Updatedim_datetime(dim_datetime instance);
    partial void Deletedim_datetime(dim_datetime instance);
    partial void InsertFact(Fact instance);
    partial void UpdateFact(Fact instance);
    partial void DeleteFact(Fact instance);
    partial void Insertdim_Faculty(dim_Faculty instance);
    partial void Updatedim_Faculty(dim_Faculty instance);
    partial void Deletedim_Faculty(dim_Faculty instance);
    partial void Insertdim_Group(dim_Group instance);
    partial void Updatedim_Group(dim_Group instance);
    partial void Deletedim_Group(dim_Group instance);
    partial void Insertdim_Student(dim_Student instance);
    partial void Updatedim_Student(dim_Student instance);
    partial void Deletedim_Student(dim_Student instance);
    #endregion
		
		public LtS_StudentDataContext() : 
				base(global::SAA.Properties.Settings.Default.SAA_StudentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LtS_StudentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LtS_StudentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LtS_StudentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LtS_StudentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dim_datetime> dim_datetime
		{
			get
			{
				return this.GetTable<dim_datetime>();
			}
		}
		
		public System.Data.Linq.Table<Fact> Fact
		{
			get
			{
				return this.GetTable<Fact>();
			}
		}
		
		public System.Data.Linq.Table<dim_Faculty> dim_Faculty
		{
			get
			{
				return this.GetTable<dim_Faculty>();
			}
		}
		
		public System.Data.Linq.Table<dim_Group> dim_Group
		{
			get
			{
				return this.GetTable<dim_Group>();
			}
		}
		
		public System.Data.Linq.Table<dim_Student> dim_Student
		{
			get
			{
				return this.GetTable<dim_Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dim_datetime")]
	public partial class dim_datetime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_date;
		
		private string _month;
		
		private int _Year;
		
		private EntitySet<Fact> _Fact;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_dateChanging(int value);
    partial void Onid_dateChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    #endregion
		
		public dim_datetime()
		{
			this._Fact = new EntitySet<Fact>(new Action<Fact>(this.attach_Fact), new Action<Fact>(this.detach_Fact));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_date", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_date
		{
			get
			{
				return this._id_date;
			}
			set
			{
				if ((this._id_date != value))
				{
					this.Onid_dateChanging(value);
					this.SendPropertyChanging();
					this._id_date = value;
					this.SendPropertyChanged("id_date");
					this.Onid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_datetime_Fact", Storage="_Fact", ThisKey="id_date", OtherKey="id_date")]
		public EntitySet<Fact> Fact
		{
			get
			{
				return this._Fact;
			}
			set
			{
				this._Fact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fact(Fact entity)
		{
			this.SendPropertyChanging();
			entity.dim_datetime = this;
		}
		
		private void detach_Fact(Fact entity)
		{
			this.SendPropertyChanging();
			entity.dim_datetime = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fact")]
	public partial class Fact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fact_id;
		
		private int _id_student;
		
		private int _id_date;
		
		private System.Nullable<double> _prof_uspevaemost;
		
		private System.Nullable<double> _neprof_uspevaemost;
		
		private System.Nullable<int> _conference_count;
		
		private System.Nullable<int> _olimp_prizer;
		
		private System.Nullable<int> _olimp_winner;
		
		private System.Nullable<int> _prof_sites;
		
		private System.Nullable<double> _ocenka_prepodovatela;
		
		private System.Nullable<double> _otziv_zavkaf;
		
		private System.Nullable<double> _otziv_practica;
		
		private System.Nullable<int> _publications;
		
		private System.Nullable<int> _patents;
		
		private System.Nullable<int> _sertificates;
		
		private System.Nullable<int> _projects;
		
		private System.Nullable<bool> _opit;
		
		private EntityRef<dim_datetime> _dim_datetime;
		
		private EntityRef<dim_Student> _dim_Student;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfact_idChanging(int value);
    partial void Onfact_idChanged();
    partial void Onid_studentChanging(int value);
    partial void Onid_studentChanged();
    partial void Onid_dateChanging(int value);
    partial void Onid_dateChanged();
    partial void Onprof_uspevaemostChanging(System.Nullable<double> value);
    partial void Onprof_uspevaemostChanged();
    partial void Onneprof_uspevaemostChanging(System.Nullable<double> value);
    partial void Onneprof_uspevaemostChanged();
    partial void Onconference_countChanging(System.Nullable<int> value);
    partial void Onconference_countChanged();
    partial void Onolimp_prizerChanging(System.Nullable<int> value);
    partial void Onolimp_prizerChanged();
    partial void Onolimp_winnerChanging(System.Nullable<int> value);
    partial void Onolimp_winnerChanged();
    partial void Onprof_sitesChanging(System.Nullable<int> value);
    partial void Onprof_sitesChanged();
    partial void Onocenka_prepodovatelaChanging(System.Nullable<double> value);
    partial void Onocenka_prepodovatelaChanged();
    partial void Onotziv_zavkafChanging(System.Nullable<double> value);
    partial void Onotziv_zavkafChanged();
    partial void Onotziv_practicaChanging(System.Nullable<double> value);
    partial void Onotziv_practicaChanged();
    partial void OnpublicationsChanging(System.Nullable<int> value);
    partial void OnpublicationsChanged();
    partial void OnpatentsChanging(System.Nullable<int> value);
    partial void OnpatentsChanged();
    partial void OnsertificatesChanging(System.Nullable<int> value);
    partial void OnsertificatesChanged();
    partial void OnprojectsChanging(System.Nullable<int> value);
    partial void OnprojectsChanged();
    partial void OnopitChanging(System.Nullable<bool> value);
    partial void OnopitChanged();
    #endregion
		
		public Fact()
		{
			this._dim_datetime = default(EntityRef<dim_datetime>);
			this._dim_Student = default(EntityRef<dim_Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fact_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fact_id
		{
			get
			{
				return this._fact_id;
			}
			set
			{
				if ((this._fact_id != value))
				{
					this.Onfact_idChanging(value);
					this.SendPropertyChanging();
					this._fact_id = value;
					this.SendPropertyChanged("fact_id");
					this.Onfact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_student", DbType="Int NOT NULL")]
		public int id_student
		{
			get
			{
				return this._id_student;
			}
			set
			{
				if ((this._id_student != value))
				{
					if (this._dim_Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_studentChanging(value);
					this.SendPropertyChanging();
					this._id_student = value;
					this.SendPropertyChanged("id_student");
					this.Onid_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_date", DbType="Int NOT NULL")]
		public int id_date
		{
			get
			{
				return this._id_date;
			}
			set
			{
				if ((this._id_date != value))
				{
					if (this._dim_datetime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_dateChanging(value);
					this.SendPropertyChanging();
					this._id_date = value;
					this.SendPropertyChanged("id_date");
					this.Onid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prof_uspevaemost", DbType="Float")]
		public System.Nullable<double> prof_uspevaemost
		{
			get
			{
				return this._prof_uspevaemost;
			}
			set
			{
				if ((this._prof_uspevaemost != value))
				{
					this.Onprof_uspevaemostChanging(value);
					this.SendPropertyChanging();
					this._prof_uspevaemost = value;
					this.SendPropertyChanged("prof_uspevaemost");
					this.Onprof_uspevaemostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neprof_uspevaemost", DbType="Float")]
		public System.Nullable<double> neprof_uspevaemost
		{
			get
			{
				return this._neprof_uspevaemost;
			}
			set
			{
				if ((this._neprof_uspevaemost != value))
				{
					this.Onneprof_uspevaemostChanging(value);
					this.SendPropertyChanging();
					this._neprof_uspevaemost = value;
					this.SendPropertyChanged("neprof_uspevaemost");
					this.Onneprof_uspevaemostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conference_count", DbType="Int")]
		public System.Nullable<int> conference_count
		{
			get
			{
				return this._conference_count;
			}
			set
			{
				if ((this._conference_count != value))
				{
					this.Onconference_countChanging(value);
					this.SendPropertyChanging();
					this._conference_count = value;
					this.SendPropertyChanged("conference_count");
					this.Onconference_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olimp_prizer", DbType="Int")]
		public System.Nullable<int> olimp_prizer
		{
			get
			{
				return this._olimp_prizer;
			}
			set
			{
				if ((this._olimp_prizer != value))
				{
					this.Onolimp_prizerChanging(value);
					this.SendPropertyChanging();
					this._olimp_prizer = value;
					this.SendPropertyChanged("olimp_prizer");
					this.Onolimp_prizerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olimp_winner", DbType="Int")]
		public System.Nullable<int> olimp_winner
		{
			get
			{
				return this._olimp_winner;
			}
			set
			{
				if ((this._olimp_winner != value))
				{
					this.Onolimp_winnerChanging(value);
					this.SendPropertyChanging();
					this._olimp_winner = value;
					this.SendPropertyChanged("olimp_winner");
					this.Onolimp_winnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prof_sites", DbType="Int")]
		public System.Nullable<int> prof_sites
		{
			get
			{
				return this._prof_sites;
			}
			set
			{
				if ((this._prof_sites != value))
				{
					this.Onprof_sitesChanging(value);
					this.SendPropertyChanging();
					this._prof_sites = value;
					this.SendPropertyChanged("prof_sites");
					this.Onprof_sitesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ocenka_prepodovatela", DbType="Float")]
		public System.Nullable<double> ocenka_prepodovatela
		{
			get
			{
				return this._ocenka_prepodovatela;
			}
			set
			{
				if ((this._ocenka_prepodovatela != value))
				{
					this.Onocenka_prepodovatelaChanging(value);
					this.SendPropertyChanging();
					this._ocenka_prepodovatela = value;
					this.SendPropertyChanged("ocenka_prepodovatela");
					this.Onocenka_prepodovatelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otziv_zavkaf", DbType="Float")]
		public System.Nullable<double> otziv_zavkaf
		{
			get
			{
				return this._otziv_zavkaf;
			}
			set
			{
				if ((this._otziv_zavkaf != value))
				{
					this.Onotziv_zavkafChanging(value);
					this.SendPropertyChanging();
					this._otziv_zavkaf = value;
					this.SendPropertyChanged("otziv_zavkaf");
					this.Onotziv_zavkafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otziv_practica", DbType="Float")]
		public System.Nullable<double> otziv_practica
		{
			get
			{
				return this._otziv_practica;
			}
			set
			{
				if ((this._otziv_practica != value))
				{
					this.Onotziv_practicaChanging(value);
					this.SendPropertyChanging();
					this._otziv_practica = value;
					this.SendPropertyChanged("otziv_practica");
					this.Onotziv_practicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publications", DbType="Int")]
		public System.Nullable<int> publications
		{
			get
			{
				return this._publications;
			}
			set
			{
				if ((this._publications != value))
				{
					this.OnpublicationsChanging(value);
					this.SendPropertyChanging();
					this._publications = value;
					this.SendPropertyChanged("publications");
					this.OnpublicationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patents", DbType="Int")]
		public System.Nullable<int> patents
		{
			get
			{
				return this._patents;
			}
			set
			{
				if ((this._patents != value))
				{
					this.OnpatentsChanging(value);
					this.SendPropertyChanging();
					this._patents = value;
					this.SendPropertyChanged("patents");
					this.OnpatentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sertificates", DbType="Int")]
		public System.Nullable<int> sertificates
		{
			get
			{
				return this._sertificates;
			}
			set
			{
				if ((this._sertificates != value))
				{
					this.OnsertificatesChanging(value);
					this.SendPropertyChanging();
					this._sertificates = value;
					this.SendPropertyChanged("sertificates");
					this.OnsertificatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projects", DbType="Int")]
		public System.Nullable<int> projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				if ((this._projects != value))
				{
					this.OnprojectsChanging(value);
					this.SendPropertyChanging();
					this._projects = value;
					this.SendPropertyChanged("projects");
					this.OnprojectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opit", DbType="Bit")]
		public System.Nullable<bool> opit
		{
			get
			{
				return this._opit;
			}
			set
			{
				if ((this._opit != value))
				{
					this.OnopitChanging(value);
					this.SendPropertyChanging();
					this._opit = value;
					this.SendPropertyChanged("opit");
					this.OnopitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_datetime_Fact", Storage="_dim_datetime", ThisKey="id_date", OtherKey="id_date", IsForeignKey=true)]
		public dim_datetime dim_datetime
		{
			get
			{
				return this._dim_datetime.Entity;
			}
			set
			{
				dim_datetime previousValue = this._dim_datetime.Entity;
				if (((previousValue != value) 
							|| (this._dim_datetime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dim_datetime.Entity = null;
						previousValue.Fact.Remove(this);
					}
					this._dim_datetime.Entity = value;
					if ((value != null))
					{
						value.Fact.Add(this);
						this._id_date = value.id_date;
					}
					else
					{
						this._id_date = default(int);
					}
					this.SendPropertyChanged("dim_datetime");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Student_Fact", Storage="_dim_Student", ThisKey="id_student", OtherKey="id_student", IsForeignKey=true)]
		public dim_Student dim_Student
		{
			get
			{
				return this._dim_Student.Entity;
			}
			set
			{
				dim_Student previousValue = this._dim_Student.Entity;
				if (((previousValue != value) 
							|| (this._dim_Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dim_Student.Entity = null;
						previousValue.Fact.Remove(this);
					}
					this._dim_Student.Entity = value;
					if ((value != null))
					{
						value.Fact.Add(this);
						this._id_student = value.id_student;
					}
					else
					{
						this._id_student = default(int);
					}
					this.SendPropertyChanged("dim_Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dim_Faculty")]
	public partial class dim_Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Faculty;
		
		private string _Name_Faculty;
		
		private EntitySet<dim_Group> _dim_Group;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FacultyChanging(int value);
    partial void OnID_FacultyChanged();
    partial void OnName_FacultyChanging(string value);
    partial void OnName_FacultyChanged();
    #endregion
		
		public dim_Faculty()
		{
			this._dim_Group = new EntitySet<dim_Group>(new Action<dim_Group>(this.attach_dim_Group), new Action<dim_Group>(this.detach_dim_Group));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Faculty", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Faculty
		{
			get
			{
				return this._ID_Faculty;
			}
			set
			{
				if ((this._ID_Faculty != value))
				{
					this.OnID_FacultyChanging(value);
					this.SendPropertyChanging();
					this._ID_Faculty = value;
					this.SendPropertyChanged("ID_Faculty");
					this.OnID_FacultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Faculty", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name_Faculty
		{
			get
			{
				return this._Name_Faculty;
			}
			set
			{
				if ((this._Name_Faculty != value))
				{
					this.OnName_FacultyChanging(value);
					this.SendPropertyChanging();
					this._Name_Faculty = value;
					this.SendPropertyChanged("Name_Faculty");
					this.OnName_FacultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Faculty_dim_Group", Storage="_dim_Group", ThisKey="ID_Faculty", OtherKey="ID_Faculty")]
		public EntitySet<dim_Group> dim_Group
		{
			get
			{
				return this._dim_Group;
			}
			set
			{
				this._dim_Group.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dim_Group(dim_Group entity)
		{
			this.SendPropertyChanging();
			entity.dim_Faculty = this;
		}
		
		private void detach_dim_Group(dim_Group entity)
		{
			this.SendPropertyChanging();
			entity.dim_Faculty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dim_Group")]
	public partial class dim_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Group;
		
		private int _ID_Faculty;
		
		private string _Abbreviation;
		
		private string _Name_Group;
		
		private EntitySet<dim_Student> _dim_Student;
		
		private EntityRef<dim_Faculty> _dim_Faculty;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GroupChanging(int value);
    partial void OnID_GroupChanged();
    partial void OnID_FacultyChanging(int value);
    partial void OnID_FacultyChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnName_GroupChanging(string value);
    partial void OnName_GroupChanged();
    #endregion
		
		public dim_Group()
		{
			this._dim_Student = new EntitySet<dim_Student>(new Action<dim_Student>(this.attach_dim_Student), new Action<dim_Student>(this.detach_dim_Student));
			this._dim_Faculty = default(EntityRef<dim_Faculty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Group", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Group
		{
			get
			{
				return this._ID_Group;
			}
			set
			{
				if ((this._ID_Group != value))
				{
					this.OnID_GroupChanging(value);
					this.SendPropertyChanging();
					this._ID_Group = value;
					this.SendPropertyChanged("ID_Group");
					this.OnID_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Faculty", DbType="Int NOT NULL")]
		public int ID_Faculty
		{
			get
			{
				return this._ID_Faculty;
			}
			set
			{
				if ((this._ID_Faculty != value))
				{
					if (this._dim_Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FacultyChanging(value);
					this.SendPropertyChanging();
					this._ID_Faculty = value;
					this.SendPropertyChanged("ID_Faculty");
					this.OnID_FacultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="VarChar(20)")]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Group", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name_Group
		{
			get
			{
				return this._Name_Group;
			}
			set
			{
				if ((this._Name_Group != value))
				{
					this.OnName_GroupChanging(value);
					this.SendPropertyChanging();
					this._Name_Group = value;
					this.SendPropertyChanged("Name_Group");
					this.OnName_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Group_dim_Student", Storage="_dim_Student", ThisKey="ID_Group", OtherKey="ID_Group")]
		public EntitySet<dim_Student> dim_Student
		{
			get
			{
				return this._dim_Student;
			}
			set
			{
				this._dim_Student.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Faculty_dim_Group", Storage="_dim_Faculty", ThisKey="ID_Faculty", OtherKey="ID_Faculty", IsForeignKey=true)]
		public dim_Faculty dim_Faculty
		{
			get
			{
				return this._dim_Faculty.Entity;
			}
			set
			{
				dim_Faculty previousValue = this._dim_Faculty.Entity;
				if (((previousValue != value) 
							|| (this._dim_Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dim_Faculty.Entity = null;
						previousValue.dim_Group.Remove(this);
					}
					this._dim_Faculty.Entity = value;
					if ((value != null))
					{
						value.dim_Group.Add(this);
						this._ID_Faculty = value.ID_Faculty;
					}
					else
					{
						this._ID_Faculty = default(int);
					}
					this.SendPropertyChanged("dim_Faculty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dim_Student(dim_Student entity)
		{
			this.SendPropertyChanging();
			entity.dim_Group = this;
		}
		
		private void detach_dim_Student(dim_Student entity)
		{
			this.SendPropertyChanging();
			entity.dim_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dim_Student")]
	public partial class dim_Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_student;
		
		private int _ID_Group;
		
		private string _fio_student;
		
		private string _residense_place;
		
		private string _Phone_student;
		
		private string _email_student;
		
		private string _zachetka;
		
		private EntitySet<Fact> _Fact;
		
		private EntityRef<dim_Group> _dim_Group;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_studentChanging(int value);
    partial void Onid_studentChanged();
    partial void OnID_GroupChanging(int value);
    partial void OnID_GroupChanged();
    partial void Onfio_studentChanging(string value);
    partial void Onfio_studentChanged();
    partial void Onresidense_placeChanging(string value);
    partial void Onresidense_placeChanged();
    partial void OnPhone_studentChanging(string value);
    partial void OnPhone_studentChanged();
    partial void Onemail_studentChanging(string value);
    partial void Onemail_studentChanged();
    partial void OnzachetkaChanging(string value);
    partial void OnzachetkaChanged();
    #endregion
		
		public dim_Student()
		{
			this._Fact = new EntitySet<Fact>(new Action<Fact>(this.attach_Fact), new Action<Fact>(this.detach_Fact));
			this._dim_Group = default(EntityRef<dim_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_student", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_student
		{
			get
			{
				return this._id_student;
			}
			set
			{
				if ((this._id_student != value))
				{
					this.Onid_studentChanging(value);
					this.SendPropertyChanging();
					this._id_student = value;
					this.SendPropertyChanged("id_student");
					this.Onid_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Group", DbType="Int NOT NULL")]
		public int ID_Group
		{
			get
			{
				return this._ID_Group;
			}
			set
			{
				if ((this._ID_Group != value))
				{
					if (this._dim_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GroupChanging(value);
					this.SendPropertyChanging();
					this._ID_Group = value;
					this.SendPropertyChanged("ID_Group");
					this.OnID_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_student", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string fio_student
		{
			get
			{
				return this._fio_student;
			}
			set
			{
				if ((this._fio_student != value))
				{
					this.Onfio_studentChanging(value);
					this.SendPropertyChanging();
					this._fio_student = value;
					this.SendPropertyChanged("fio_student");
					this.Onfio_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residense_place", DbType="VarChar(500)")]
		public string residense_place
		{
			get
			{
				return this._residense_place;
			}
			set
			{
				if ((this._residense_place != value))
				{
					this.Onresidense_placeChanging(value);
					this.SendPropertyChanging();
					this._residense_place = value;
					this.SendPropertyChanged("residense_place");
					this.Onresidense_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_student", DbType="VarChar(20)")]
		public string Phone_student
		{
			get
			{
				return this._Phone_student;
			}
			set
			{
				if ((this._Phone_student != value))
				{
					this.OnPhone_studentChanging(value);
					this.SendPropertyChanging();
					this._Phone_student = value;
					this.SendPropertyChanged("Phone_student");
					this.OnPhone_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_student", DbType="VarChar(250)")]
		public string email_student
		{
			get
			{
				return this._email_student;
			}
			set
			{
				if ((this._email_student != value))
				{
					this.Onemail_studentChanging(value);
					this.SendPropertyChanging();
					this._email_student = value;
					this.SendPropertyChanged("email_student");
					this.Onemail_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zachetka", DbType="VarChar(30)")]
		public string zachetka
		{
			get
			{
				return this._zachetka;
			}
			set
			{
				if ((this._zachetka != value))
				{
					this.OnzachetkaChanging(value);
					this.SendPropertyChanging();
					this._zachetka = value;
					this.SendPropertyChanged("zachetka");
					this.OnzachetkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Student_Fact", Storage="_Fact", ThisKey="id_student", OtherKey="id_student")]
		public EntitySet<Fact> Fact
		{
			get
			{
				return this._Fact;
			}
			set
			{
				this._Fact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dim_Group_dim_Student", Storage="_dim_Group", ThisKey="ID_Group", OtherKey="ID_Group", IsForeignKey=true)]
		public dim_Group dim_Group
		{
			get
			{
				return this._dim_Group.Entity;
			}
			set
			{
				dim_Group previousValue = this._dim_Group.Entity;
				if (((previousValue != value) 
							|| (this._dim_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dim_Group.Entity = null;
						previousValue.dim_Student.Remove(this);
					}
					this._dim_Group.Entity = value;
					if ((value != null))
					{
						value.dim_Student.Add(this);
						this._ID_Group = value.ID_Group;
					}
					else
					{
						this._ID_Group = default(int);
					}
					this.SendPropertyChanged("dim_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fact(Fact entity)
		{
			this.SendPropertyChanging();
			entity.dim_Student = this;
		}
		
		private void detach_Fact(Fact entity)
		{
			this.SendPropertyChanging();
			entity.dim_Student = null;
		}
	}
}
#pragma warning restore 1591
